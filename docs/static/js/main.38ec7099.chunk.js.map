{"version":3,"sources":["assets/logo.png","assets/phone.jpg","compoents/AnimatedSpan.tsx","compoents/Phone.tsx","helpers/messageStore.ts","compoents/Messages.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","AnimatedSpan","props","content","defaultState","contentWidth","left","duration","_useState","useState","_useState2","_slicedToArray","state","setState","ref","useRef","useEffect","_ref","current","offsetWidth","parentElement","_objectSpread","timing","animationName","concat","Text","styled","_templateObject","_taggedTemplateLiteral","React","createElement","className","defaultProps","memo","StyledContainer","div","Phone","notification","compactMessage","useMemo","heading","Fragment","src","phoneImage","alt","width","height","getLastKey","localStorage","getItem","key","rawItem","Error","JSON","parse","addMessage","message","currentKey","id","generateKey","previousKey","setItem","stringify","StyledInner","_templateObject2","StyledContent","_templateObject3","StyledMessageContainer","_templateObject4","MessageDetail","onClose","messages","_getItem","_previousKey","_objectWithoutProperties","push","getAllMessages","onClick","map","_ref2","index","timestamp","data","dayjs","Date","format","StyledMain","main","StyledAnchor","a","App","setInitialized","_useState3","_useState4","setNotification","_useState5","_useState6","messagesShown","setMessagesShown","OneSignal","init","appId","promptOptions","slidedown","prompts","type","autoPrompt","text","actionMessage","acceptButton","cancelButton","delay","pageViews","timeDelay","then","showSlidedownPrompt","console","log","addListenerForNotificationOpened","logo","Messages","bind","undefined","href","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","e","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","URL","process","origin","addEventListener","fetch","headers","Service-Worker","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.38ec7099.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.7132cb1b.png\";","module.exports = __webpack_public_path__ + \"static/media/phone.d630886d.jpg\";","import React, { useEffect, useRef, useState } from \"react\"\nimport styled from \"styled-components\";\n\ninterface AnimatedSpanProps {\n    /**\n     * 内容\n     */\n    content: string\n    /**\n     * 持续时间/s\n     */\n    duration: number\n}\n\nfunction AnimatedSpan(props: AnimatedSpanProps) {\n    const { content, duration } = props\n\n    const defaultState = {\n        contentWidth: 0,\n        left: 0,\n        duration,\n    }\n\n    const [state, setState] = useState(defaultState)\n\n    let ref = useRef<HTMLParagraphElement>(null)\n\n    useEffect(() => {\n        const { offsetWidth, parentElement } = ref.current as HTMLParagraphElement\n\n        setState({\n            ...state,\n            contentWidth: offsetWidth,\n            left: parentElement!.offsetWidth,\n        })\n    }, [content])\n\n    const { contentWidth, left, duration: timing } = state\n\n    const animationName = `marquee_${contentWidth}`\n\n    const Text = styled.p`\n      position: relative;\n      left: ${left}px;\n      animation: ${animationName} ${timing}s linear infinite both;\n      animation-play-state: running;\n      animation-fill-mode: forwards;\n  \n      @keyframes ${animationName} {\n        0% {\n          transform: translateX(0px);\n        }\n  \n        100% {\n          transform: translateX(-${contentWidth + left}px);\n        }\n      }\n    `\n\n    return (\n        <div className=\"marquee_box\">\n            <Text ref={ref}>{content}</Text>\n        </div>\n    )\n}\nAnimatedSpan.defaultProps = {\n    content: '',\n    duration: 3,\n}\n\nexport default React.memo(AnimatedSpan)","import React, { useMemo } from 'react';\nimport phoneImage from '../assets/phone.jpg';\nimport AnimatedSpan from './AnimatedSpan';\nimport { Message } from '../types';\nimport styled from 'styled-components';\n\nconst StyledContainer = styled.div`\nmargin-top: 40px;\nposition: relative;\n`;\n\ninterface Props {\n    notification: Message | null;\n}\n\nexport default function Phone({ notification }: Props) {\n    const compactMessage = useMemo(() => {\n        if (!notification) return '欢迎回来！';\n        const { heading, content } = notification;\n        return `${heading}：${content}`\n    }, [notification])\n    return (\n        <>\n            <StyledContainer>\n                <img\n                    src={phoneImage}\n                    alt=\"Phone\"\n                    width=\"190\"\n                    height=\"410\"\n                />\n                <AnimatedSpan content={compactMessage} duration={8} />\n            </StyledContainer>\n        </>\n    )\n}","import { Message } from \"../types\";\n\ninterface StoredMessage extends Message {\n    previousKey: string | null;\n}\n\nfunction generateKey(message: Message): string {\n    return `message_${message.id}`\n}\n\nfunction getLastKey(): string | null {\n    return localStorage.getItem('lastKey');\n}\n\nfunction setLastKey(key: string) {\n    localStorage.setItem('lastKey', key);\n}\n\nfunction setItem(currentKey: string, message: Message, previousKey: string | null) {\n    localStorage.setItem(currentKey, JSON.stringify({\n        ...message,\n        previousKey,\n    }));\n}\n\nfunction getItem(key: string): StoredMessage {\n    const rawItem = localStorage.getItem(key);\n    if (!rawItem) {\n        throw new Error(`No message found for key ${key}`);\n    }\n    return JSON.parse(rawItem);\n}\n\nexport function addMessage(message: Message) {\n    const currentKey = generateKey(message);\n    setItem(currentKey, message, getLastKey());\n    setLastKey(currentKey);\n}\n\nexport function getAllMessages(): Message[] {\n    let previousKey = getLastKey();\n\n    const messages: Message[] = [];\n    while (previousKey) {\n        const { previousKey: _previousKey, ...message } = getItem(previousKey);\n        messages.push(message)\n        previousKey = _previousKey;\n    }\n\n    return messages;\n}","import React from \"react\"\nimport styled from \"styled-components\";\nimport { getAllMessages } from \"../helpers/messageStore\";\nimport dayjs from 'dayjs';\n\nconst StyledContainer = styled.div`\nbackground-color: rgba(0,0,0,0.8);\nposition: absolute;\ntop: 0;\nleft: 0;\nright: 0;\nbottom: 0;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nflex-direction: column;\n`;\n\nconst StyledInner = styled.div`\ndisplay: flex;\nflex-direction: column;\nalign-items: start;\noverflow-y: scroll;\nwidth: 100%;\npadding-left: 30px;\npadding-right: 30px;\npadding-top: 47px;\npadding-bottom: 34px;\n`\n\nconst StyledContent = styled.p`\ncolor: white;\n`\n\nconst StyledMessageContainer = styled.div`\nwidth: 100%;\n`\n\n\ninterface MessageDetailProps {\n  onClose: () => void;\n}\n\nfunction MessageDetail({ onClose }: MessageDetailProps) {\n  const messages = getAllMessages();\n\n  return (\n    <StyledContainer onClick={onClose}>\n      <StyledInner onClick={onClose}>\n        {messages.map(({ id, heading, content, data: { timestamp } }, index) => (\n          <StyledMessageContainer key={id}>\n            {index > 0 && (<hr />)}\n            <StyledContent>{dayjs(new Date(timestamp)).format('M-D H:mm')}</StyledContent>\n            <StyledContent>{heading}</StyledContent>\n            <StyledContent>{content}</StyledContent>\n          </StyledMessageContainer>\n        ))}\n      </StyledInner>\n    </StyledContainer>\n  )\n}\n\nexport default MessageDetail;","import React, { useEffect, useState } from 'react';\nimport logo from './assets/logo.png';\nimport './App.css';\nimport Phone from './compoents/Phone';\nimport OneSignal from 'react-onesignal';\nimport { Message } from './types';\nimport styled from 'styled-components';\nimport { addMessage } from './helpers/messageStore';\nimport Messages from './compoents/Messages';\n\nconst StyledMain = styled.main`\nposition: relative;\njustify-content: center;\nalign-items: center;\nheight: 100svh;\ndisplay: flex;\nflex-direction: column;\n`\n\nconst StyledAnchor = styled.a`\ndisplay: block;\nmargin: 52px auto 0;\nwidth: 160px;\nheight: 38px;\nline-height: 38px;\ncolor: #fff;\nfont-size: 14px;\nfont-weight: 700;\nbackground: -webkit-linear-gradient(173.82deg, #ff373c 4.68%, #ff5757 83.21%);\nbackground: -moz-linear-gradient(173.82deg, #ff373c 4.68%, #ff5757 83.21%);\nbackground: linear-gradient(276.18deg, #ff373c 4.68%, #ff5757 83.21%);\nborder-radius: 19px;\ntext-decoration: none;\ntext-align: center;\n`;\n\n// setInterval(() => {\n//   addMessage({\n//     id: new Date().getTime().toString(),\n//     heading: new Array(10).fill('标题').join(' '),\n//     content: new Array(10).fill('内容').join('\\t'),\n//     data: {\n//       timestamp: new Date().getTime()\n//     }\n//   })\n// }, 1000)\n\nfunction App() {\n  const [initialized, setInitialized] = useState(false);\n  const [notification, setNotification] = useState<Message | null>(null);\n  const [messagesShown, setMessagesShown] = useState(false);\n\n  useEffect(() => {\n    OneSignal.init({\n      appId: '4141a199-dcc1-4ac0-95c4-d8c15258d208',\n      promptOptions: {\n        slidedown: {\n          prompts: [\n            {\n              type: \"push\", // current types are \"push\" & \"category\"\n              autoPrompt: true,\n              text: {\n                /* limited to 90 characters */\n                actionMessage: \"请允许接受我们的推送通知，以免错过最新最全资讯哦！\",\n                /* acceptButton limited to 15 characters */\n                acceptButton: \"马上允许\",\n                /* cancelButton limited to 15 characters */\n                cancelButton: \"再想想\"\n              },\n              delay: {\n                pageViews: 1,\n                timeDelay: 1\n              }\n            }\n          ]\n        }\n      }\n    }).then(() => {\n      setInitialized(true)\n      OneSignal.showSlidedownPrompt().then(() => {\n        console.log('OneSignal prompt shown');\n      });\n\n      OneSignal.addListenerForNotificationOpened((message: any) => {\n        message = message as Message;\n        // window.alert(\"Received NotificationOpened:\" + JSON.stringify(data))\n        setNotification(message)\n\n        /**\n         * Save to local storage\n         */\n        addMessage(message)\n      });\n    })\n\n  }, [setInitialized]);\n\n  return (\n    <StyledMain>\n      <img src={logo}\n        alt=\"Logo\"\n        width=\"106\"\n        height=\"36\"\n      />\n\n      <Phone notification={notification} />\n\n      {messagesShown && (\n        <Messages onClose={setMessagesShown.bind(undefined, false)} />\n      )}\n\n      <StyledAnchor href=\"#\" onClick={setMessagesShown.bind(undefined, true)}>下载今日头条</StyledAnchor>\n    </StyledMain>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(swUrl:string,config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// Learn more about service workers: https://cra.link/PWA\n// serviceWorkerRegistration.register(`${process.env.PUBLIC_URL}/service-worker.js`);\nserviceWorkerRegistration.register(`${process.env.PUBLIC_URL}/OneSignalSDKWorker.js`);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}